# ado-pipeline-templates/jobs/dotnet-build-test.yml
parameters:
- name: artifact_name
  type: string
  default: drop
- name: project_dir                # folder that contains your .sln/.csproj
  type: string
  default: $(Build.SourcesDirectory)
- name: projects_glob              # use '**/*.sln' or '**/*.csproj'
  type: string
  default: '**/*.sln'

steps:
- task: UseDotNet@2
  displayName: Use .NET 8
  inputs:
    packageType: sdk
    version: 8.x

# ðŸ”Ž Locator step (your snippet)
- script: |
    echo "Repo root: $(Build.SourcesDirectory)"
    find "$(Build.SourcesDirectory)" -maxdepth 4 -type f \( -name "*.sln" -o -name "*.csproj" \) -print
  displayName: Locate .NET projects

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: ${{ parameters.projects_glob }}
    workingDirectory: ${{ parameters.project_dir }}

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: ${{ parameters.projects_glob }}
    arguments: '--configuration Release --no-restore'
    workingDirectory: ${{ parameters.project_dir }}

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'   # change if your test projects use a different pattern
    arguments: '--configuration Release --no-build --logger trx --results-directory $(Build.SourcesDirectory)/TestResults'
    publishTestResults: true
    workingDirectory: ${{ parameters.project_dir }}

- script: |
    dotnet publish ${{ parameters.projects_glob }} --configuration Release --no-build -o $(Build.SourcesDirectory)/dist
  displayName: Publish app to dist
  workingDirectory: ${{ parameters.project_dir }}

- task: PublishPipelineArtifact@1
  displayName: Publish artifact
  inputs:
    targetPath: '$(Build.SourcesDirectory)/dist'
    artifact: ${{ parameters.artifact_name }}
