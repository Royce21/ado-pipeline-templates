# ado-pipeline-templates/stages/cd.yml
parameters:
- name: env
  type: string
  default: dev
- name: vmImage
  type: string
  default: ubuntu-latest
- name: artifact_name
  type: string
  default: drop
- name: service_connection
  type: string
  default: ""
- name: var_groups
  type: object
  default: []

stages:
- stage: Deploy_${{ parameters.env }}
  displayName: Deploy to ${{ parameters.env }}
  dependsOn: CI
  condition: succeeded()

  variables:
  - ${{ each g in parameters.var_groups }}:
    - group: ${{ g }}

  jobs:
  - deployment: deploy_${{ parameters.env }}
    displayName: Deploy (${{ parameters.env }})
    environment: ${{ parameters.env }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none

          - download: current
            artifact: ${{ parameters.artifact_name }}
            displayName: Download artifact (current run)

          - script: |
              echo "Artifact at: $(Pipeline.Workspace)/${{ parameters.artifact_name }}"
              ls -la "$(Pipeline.Workspace)/${{ parameters.artifact_name }}" || true
            displayName: Inspect artifact

          - ${{ if ne(parameters.service_connection, '') }}:
            - task: AzureCLI@2
              displayName: Deploy (placeholder)
              inputs:
                azureSubscription: ${{ parameters.service_connection }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  echo "Deploying to ${{ parameters.env }}"
                  echo "Using artifact at: $(Pipeline.Workspace)/${{ parameters.artifact_name }}"
